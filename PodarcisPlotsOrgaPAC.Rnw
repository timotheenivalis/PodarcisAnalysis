\documentclass{article}

 \renewcommand{\familydefault}{\sfdefault} %simpler font

\usepackage{booktabs}
\usepackage[top=2.5cm, bottom=2.5cm, left=2.5cm, right=2.5cm]{geometry}
\usepackage{wasysym}

%%%%%%%%% MACROS %%%%%%%%%
%primary macros
\usepackage{xspace}% to avoid annoyance with spaces when using macros
\newcommand{\frequency}[1]{\ensuremath{\mathrm{f}(#1)}}
\newcommand{\proportion}[1]{\ensuremath{\mathrm{p}(#1)}}
\newcommand{\mean}[1]{\ensuremath{\overline{#1}}}
\newcommand{\minimum}[1]{\ensuremath{\mathrm{p}_{\min}(#1)}}
\newcommand{\Mitochondria}{M\xspace}
\newcommand{\Autosome}{\mathbf{a}\xspace}
%secondary macros

\newcommand{\MtIttIntrogressions}[1]{\frequency{\Mitochondria#1}}
\newcommand{\AutCopiesIntrogressed}{\mean{\Autosome}\xspace}
\newcommand{\AutLociIntrogressed}[1]{\proportion{\Autosome#1}}
\newcommand{\MeanAutLociIntrogressed}[1]{\mean{\proportion{\Autosome#1}}}
%\newcommand{\MinAutLociIntrogressed}[1]{$\min$(\proportion{\Autosome#1})}
\newcommand{\MinAutLociIntrogressed}[1]{\minimum{\Autosome#1}}
\newcommand{\singleAutosome}[1]{\ensuremath{a_{#1}}}

\newcommand{\FitnessHybrid}{\ensuremath{\omega_{h}}}
\newcommand{\BiasedFitnessHybrid}{\ensuremath{\omega_{h \female / \male}}}
\newcommand{\AsymmetricCross}{\ensuremath{c}}
\newcommand{\BiasedDispersal}{\ensuremath{\sigma_{\female}^2 / \sigma_{\male}^2}}

\newcommand{\habitatdim}[1]{\ensuremath{#1}}% could be N_X and N_Y, or X and Y or something else...


\begin{document}

\section{load data}

<<packages, echo=FALSE>>=
library(xtable)

load(file = "/home/timothee/Documents/GitHub/PodarcisAnalysis/allpodarcis.RData")
@

\section{NOW START PLOTS}


<<ParamPlot,echo=FALSE>>=
cexP<-1.8
lwdP<-5
limYP<-1
atLab<- seq(0,to = 1,by = 0.2)
colMtCapt<-"black"
colMt<-gray(level=0.3)
coeffjitter<-200
lowBound<-"0"
highBound<-"100"
boxr <- 20

plotMt<-function(x,y,dmt,xlabb,transfo=identity,DrawLegend=FALSE,limY=limYP,main="",...){
  par(mar=c(5,4,4,2)+0.1)
  calcboxwex<-(max(transfo(x[,y]),na.rm=T)-min(transfo(x[,y]),na.rm=T))/boxr
  plot(transfo(x[,y]),x$FixMt,col=colMtCapt,type="b",ylim=c(0,limY),pch=15,lwd=lwdP,xlab=xlabb,ylab="$$",main=main, cex.main=cexP*1.1, cex.lab=cexP,axes = T,xaxt="n",yaxt="n",cex=cexP*1.2)  
axis(side = 1,at = transfo(x[,y]),labels = x[,y],cex.axis=cexP)
axis(side = 2,at = atLab,labels = atLab,cex.axis=cexP,las=1)
boxplot(DistriMtMax~Param, at=transfo(x[,y]), data=dmt,add=T,axes=F,border=colMt,boxwex=calcboxwex,boxlwd=lwdP,whisklwd=lwdP,staplelwd=lwdP,outlwd=lwdP,medlwd=lwdP)
points(transfo(x[,y]),x[,"FixMt"],col=colMtCapt,type="b",pch=15,lwd=lwdP,cex=cexP)#to override the boxplots
for (i in 1:dim(x)[2])
{
  bound<-2*(x$FixMt[i]*(1-x$FixMt[i]))/sqrt(x$NbRun[i])
  points(rep(transfo(x[i,y]),2),y=c(x$FixMt[i]+bound,x$FixMt[i]-bound),type="l",col=colMtCapt,lwd=1.3*lwdP)
}
if(DrawLegend==T)
  {legend(x="topleft",legend=c("$\\MtIttIntrogressions{=1}$","$\\Mitochondria$"),col=c(colMtCapt,colMt),pch=c(15,1),lwd=c(3,2),ncol=1,pt.lwd=c(lwdP,lwdP),cex=cexP)}
}
###########
plotAut<-function(x,y,xlabb,transfo=identity,DrawLegend=FALSE,limY=limYP,main="",...){
  par(mar=c(5,4,4,2)+0.1)
  calcjitter<-(max(transfo(x[,y]),na.rm=T)-min(transfo(x[,y]),na.rm=T))/coeffjitter
plot(transfo(x[,y])+calcjitter,x$IntAut10,col=gray(level=0.7),type="b",ylim=c(0,limY),pch=15,lwd=lwdP,xlab=xlabb,ylab="",main=main,cex.lab=cexP,cex.main=cexP*1.1,axes = T,xaxt="n",yaxt="n",cex=cexP,lty=2)
axis(side = 1,at = transfo(x[,y]),labels = x[,y],cex.axis=cexP)
axis(side = 2,at = atLab,labels = atLab,cex.axis=cexP,las=1)
#points(transfo(x[,y])+calcjitter,x$IntAut10,col=gray(level=0.6),pch=1,lwd=2,type="b",lty=2)
#points(transfo(x[,y])+2*calcjitter,x$FixAut,col=gray(level=0.5),pch=6,lwd=2,type="b",lty=3)
points(transfo(x[,y])-calcjitter,x$MeanExoAut,col="black",pch=1,lwd=lwdP,type="b",lty=1,cex=cexP)
for (i in 1:dim(x)[1])
{
  # points(rep(transfo(x[i,y]),2),c(x[i,paste("Introgq",lowBound,sep="")],x[i,paste("Introgq",highBound,sep="")]),type="l",col=gray(0.3))
  points(rep(transfo(x[i,y]),2)+calcjitter,c(x[i,paste("Introg10q",lowBound,sep="")],x[i,paste("Introg10q",highBound,sep="")]),type="l",col=gray(0.7),lwd=lwdP)
  # points(rep(transfo(x[i,y]),2)+2*calcjitter,c(x[i,paste("Fixq",lowBound,sep="")],x[i,paste("Fixq",highBound,sep="")]),type="l",col=gray(0.5))
  points(rep(transfo(x[i,y]),2)-calcjitter,c(x[i,paste("MeanExoq",lowBound,sep="")],x[i,paste("MeanExoq",highBound,sep="")]),type="l",col=gray(0.0),lwd=lwdP)
}
if (DrawLegend==T)
{legend(x="topleft",legend=c("$\\AutLociIntrogressed{>0.1}$","$\\AutCopiesIntrogressed$"),col=c(gray(level=0.7),"black"),pch=c(15,1),lty=c(2,1),ncol=1,pt.lwd=lwdP,lwd=lwdP,cex=cexP)  }
}

###################
plotDisc<-function(x,y,dmt,xlabb,transfo=identity,DrawLegend=FALSE,limY=c(-1,1),limX=c(0,1), subind="", leftside=TRUE, yylab="",main = "", roomup = FALSE, ...){

  if(leftside){
    left <- 6
    right <- 0
  }else{
    left <- 3
    right <- 3
  }
  if(roomup)
  {
    top <- 2
    bottom <- 5
  }else{
    top <- 2
    bottom <- 5
  }
  par(mar = c( bottom, left, top, right)+0.1)

  dmt$Param<-dmt[,y]
  
  dmt$disc<-dmt$DistriMtMax-dmt$DistriNuMtMax
  
  calcboxwex<-(max(transfo(x[,y]),na.rm=T)-min(transfo(x[,y]),na.rm=T))/boxr
  
  boxplot(disc~Param,data=dmt,axes=T,xaxt="n",yaxt="n",at=sort(transfo(x[,y])), boxwex=calcboxwex,border=colMt,boxlwd=lwdP,whisklwd=lwdP,staplelwd=lwdP,outlwd=lwdP,medlwd=lwdP,xlim=limX,xlab=paste("\\textbf{",xlabb,"}", sep=""), ylab="",cex.lab=cexP,las=1, cex.axis=cexText,ylim=limY,main=main, cex=1 )

  abline(h = 0.8,col=gray(level = 0.5),lwd=lwdP,lty=2)
legend(x="bottomright", legend=subind, bty = "n", cex = cexP, bg = "white")
axis(side = 1,at = transfo(x[,y]),labels = x[,y],cex.axis=cexText,xpd = TRUE)

if(leftside==TRUE)
{
axis(side = 2,at = seq(-1,1,0.5),cex.axis=cexText,las=1,xpd = FALSE)

}else{
axis(side = 2,at = seq(-1,1,0.5), labels=FALSE,cex.axis=cexText,las=1,xpd = FALSE)
}
mtext(yylab,side=2,line=4,cex=cexP, las=0)


}
@
All nuclear selection together:

<<AllNuclSelDisc, dev='tikz',echo=F,fig.height=6,fig.width=9,out.width='\\textwidth',fig.align='center'>>=
cexP<-2.2
lwdP<-5
limYP<-1
atLab<- seq(0,to = 1,by = 0.2)
colMtCapt<-"black"
colMt<-gray(level=0.3)
coeffjitter<-200
lowBound<-"0"
highBound<-"100"
boxr <- 20

  par(layout(mat=matrix(1:3,nrow = 1,byrow=TRUE),widths = c(2,3,2.5)),las=1)  
limY<-c(-0.55,1)

highmar <- 6

  #1
  par(mar=c(5.5,6.2,highmar,0)+0.1)
  x=NuclS[which(NuclS$Neu==0.5 & NuclS$R==0.5 & NuclS$TS==0.9),]
  dmt = NuclSdistriMt[which(NuclSdistriMt$Neu==0.5 & NuclSdistriMt$R==0.5 & NuclSdistriMt$TS==0.9),]
  y="NbL"
  xlabb="Number of loci"
  transfo=identity
  limX = c(-5,25)

  dmt$Param<-dmt[,y]
  dmt$disc<-dmt$DistriMtMax-dmt$DistriNuMtMax
  calcboxwex<-6
  boxplot(disc~Param,data=dmt,axes=T,xaxt="n",at=transfo(x[,y]),boxwex=calcboxwex,border=colMt,boxlwd=cexP,whisklwd=cexP,staplelwd=cexP,outlwd=cexP,medlwd=cexP,xlim=limX,xlab="",ylab="",cex.lab=cexP*1.2,las=1,cex.axis=cexP*1.2,ylim=limY,main="\\textbf{(A)}",cex.main=cexP)
abline(h = 0.8,col=gray(level = 0.5),lwd=3,lty=2)
  mtext("\\textbf{Mito-nuclear discordance}",side=2,line=4.2,cex=cexP,las=0)
axis(side = 1,at = transfo(x[,y]),labels = x[,y],cex.axis=cexP*1.2,xpd = TRUE, padj = 0.5)
mtext(text = xlabb, side = 1, line = 4.25, cex = cexP*0.9)

#2
par(mar=c(5.5,2,highmar,0)+0.1)
x=Rec
dmt = RecdistriMt 
y="r"
xlabb="Autosomal length (Morgans)"
transfo=function(a){log(a+0.0001)}
limX=log(0.0001+c(0,1))-c(1,0)
calcboxwex<- 0.9
  dmt$Param<-dmt[,y]
  dmt$disc<-dmt$DistriMtMax-dmt$DistriNuMtMax
  boxplot(disc~Param,data=dmt,axes=T,yaxt="n",xaxt="n",at=transfo(x[,y]),boxwex=calcboxwex,border=colMt,boxlwd=2,whisklwd=2,staplelwd=2,outlwd=2,medlwd=2,xlim=limX,xlab="", ylab="",cex.lab=cexP*1.2,las=1,cex.axis=cexP*1.2,ylim=limY,main="\\textbf{(B)}",cex.main=cexP)
abline(h = 0.8,col=gray(level = 0.5),lwd=3,lty=2)
axis(side = 1,at = transfo(x[,y]),labels = x[,y]*40,cex.axis=cexP*1.2,xpd = TRUE, padj = 0.5)
axis(side=2,at = c(-0.5,0,0.5,1),labels=NA)
mtext(text = xlabb, side = 1, line = 4.25, cex = cexP*0.9)

#3
par(mar=c(5.5,2,highmar,2)+0.1)
x=TotSel
dmt =TotSelDistriMt 
y="Ts"
xlabb="Total selection"
transfo=identity
limX=c(min(TotSel$Ts),max(TotSel$Ts))+c(-0.1,0.1)
calcboxwex<-0.125
  dmt$Param<-dmt[,y]
  dmt$disc<-dmt$DistriMtMax-dmt$DistriNuMtMax
  boxplot(disc~Param,data=dmt,axes=T,yaxt="n",xaxt="n",at=sort(transfo(x[,y])),boxwex=calcboxwex,border=colMt,boxlwd=2,whisklwd=2,staplelwd=2,outlwd=2,medlwd=2,xlim=limX,xlab="",ylab="",cex.lab=cexP*1.2,las=1,cex.axis=cexP*1.2,ylim=limY,main="\\textbf{(C)}",cex.main=cexP)
abline(h = 0.8,col=gray(level = 0.5),lwd=3,lty=2)
axis(side = 1,at = transfo(x[,y]),labels = x[,y],cex.axis=cexP*1.2,xpd = TRUE, padj=0.5)
axis(side=2,at = c(-0.5,0,0.5,1),labels=NA)
mtext(text = xlabb, side = 1, line = 4.25, cex = cexP*0.9)

# title
#mtext("\\textbf{Nuclear counter-selection and recombinaison (high dispersal)}", side=3, line=-2, outer=TRUE, cex=2)
@

\section{main graphes}
\subsection{Page 1: Discordance}

<<DiscordanceAll, dev='tikz', echo=F,out.width='\\textwidth',fig.align='center', fig.height=10, fig.width=8>>=

cexP<-2.4
cexText<-2# for axis X
lwdP<-3
lwd<-2
limYP<-1
atLab<- seq(0,to = 1,by = 0.2)
colMtCapt<-"black"
colMt<-gray(level=0.3)
coeffjitter<-200
lowBound<-"0"
highBound<-"100"
boxr <- 20

par(layout(mat=matrix(1:8,nrow = 4,byrow=TRUE)),las=1)  
#par(layout(mat=matrix(1:6,nrow = 3,byrow=TRUE)),las=1)  
limY<-c(-1,1)


#(1,1) HIGH M, disp
plotDisc(x = BD,y = "DispB",dmt = BDdistriMt,xlabb="Female relative dispersal",transfo=log,DrawLegend = T,limX=log(c(min(BDdistriMt$Param),max(BDdistriMt$Param))), subind="\\textbf{(A)}", leftside = TRUE, limY=limY)

#(1,2) LOW M, disp
lmBDDMT$DispB<-lmBDDMT$Param
plotDisc(x = lmBD,y = "DispB",dmt = lmBDDMT,xlabb="Female relative dispersal",transfo=log,DrawLegend = T,limX=log(c(min(lmBDDMT$Param),max(lmBDDMT$Param))),subind="\\textbf{(B)}", leftside = FALSE, limY=limY)


#(2,1) HIGH M, hybrid surviva
plotDisc(x = BH,y = "FitnessH",dmt = BHdistriMt,xlabb="Female relative hybrid survival",transfo=log,DrawLegend = T,limX=(c(min(BHdistriMt$Param),max(BHdistriMt$Param))),subind="\\textbf{(C)}", leftside = TRUE, limY = limY)

#(2,2) LOW M, hybrid survival
lmBHDMT$FitnessH<-lmBHDMT$Param
plotDisc(x = lmBH,y = "FitnessH",dmt = lmBHDMT,xlab="Female relative hybrid survival ",transfo=log,DrawLegend = T,limX=log(c(min(lmBHDMT$Param),max(lmBHDMT$Param))),subind="\\textbf{(D)}", leftside = FALSE, limY = limY)

#(3,1) HIGH M, mating
plotDisc(x = BC,y = "ACross",dmt = BCdistriMt,xlabb="Symmetry of inter-taxa crosses",transfo=identity,DrawLegend = T,limX=c(min(BCdistriMt$Param),max(BCdistriMt$Param)),subind="\\textbf{(E)}", leftside=TRUE, limY = limY, yylab = "\\textbf{Mito-nuclear discordance}")

#(3,2) LOW M, matingl
lmBCDMT$ACross<-lmBCDMT$Param
plotDisc(x=lmBC[which(lmBC$ACross!=0.01),],y="ACross",dmt=lmBCDMT[which(lmBCDMT$Param!=0.01),],xlab="Symetry of inter-taxa crosses",transfo=identity, DrawLegend = T,limX=c(0,1),subind="\\textbf{(F)}", leftside = FALSE, limY = limY)

  #(5,1) HIGH M, Invasion 
 
 HunProfiledistriMt$DispB<- exp(round(HunProfiledistriMt$Param,digits = 6))
 plotDisc(x=HunPr,dmt = HunProfiledistriMt, y="DispB",xlabb="Female relative dispersal",transfo=log,limX = log(c(min(HunPr$DispB),max(HunPr$DispB))),subind="\\textbf{(I)}",  leftside=TRUE, limY = limY)
 
 #(5,2) LOW M, Invasion
 lmHunPrSDMT$DispB<- exp(round(lmHunPrSDMT$Param,digits = 6))
 plotDisc(x=lmHunPrS,dmt = lmHunPrSDMT, y="DispB",xlabb="Female relative dispersal",transfo=log,limX = log(c(min(lmHunPrS$DispB),max(lmHunPrS$DispB))),subind="\\textbf{(J)}", leftside=FALSE, limY = limY)


# headers
mtext("\\textbf{High introgression}", side=3, line=-1.5, outer=TRUE, cex=1.5, at =c(0.32,10))
mtext("\\textbf{Low introgression}", side=3, line=-1.5, outer=TRUE, cex=1.5, at = c(0.75,10))

@



<<DiscordanceCombi, dev='tikz', echo=F,out.width='\\textwidth',fig.align='center', fig.height=5, fig.width=12>>=
par(layout(mat=matrix(1:2,nrow = 1,byrow=TRUE)),las=1)  

cexP = 2.2
#(4,1) HIGH M, All combi 
par(mar=c(5,6,2,0)+0.1)
allcombidisc<-allcombiDistriMt$DistriMtMax- allcombiDistriMt$DistriNuMtMax
achist<-hist(allcombidisc,breaks=30,plot = F)
achist$counts<-achist$counts/sum(achist$counts)
plot(NULL,xlim=c(0,max(achist$counts)+0.01), ylim=c(-0.5,1),col=gray(level = 0.5),las=1,ylab="",main="", xlab= "Frequency distribution", cex.axis =cexP, cex.lab= cexP)
rect(0,achist$breaks[1:(length(achist$breaks) - 1)], achist$counts, achist$breaks[2:length(achist$breaks)], col = rgb(red = 1,0,0,0.3), lty = 1, lwd=0.01, border= rgb(0.1,0.1,0.1,0.3))

refdisc <- BDdistriMt$DistriMtMax[BDdistriMt$DispB==1] - BDCdistriMt$DistriNuMtMax[BDdistriMt$DispB==1]
aref<-hist(refdisc,breaks=30,plot = F)
aref$counts <- aref$counts/sum(aref$counts)
rect(0,aref$breaks[1:(length(aref$breaks) - 1)], aref$counts, aref$breaks[2:length(aref$breaks)], col = rgb(red = 0,0,1,0.3), lty = 1, lwd=0.01, border= rgb(0.1,0.1,0.1,0.3))
abline(h = 0.8,col=gray(level = 0.5),lwd=lwdP,lty=2)
legend(x="bottomright", legend="\\textbf{(A)}", bty = "n", cex = cexP, bg = "white")

# #(4,2) LOW M, All combi
par(mar=c(5,3,2,3)+0.1)
 lmachist<-hist(lmallcombidisc,breaks = 25,plot = F)
 lmachist$counts<-lmachist$counts/sum(lmachist$counts)
 lmachist$counts<-log(log(1000*lmachist$counts+1)+1)
 plot(NULL,ylim=c(-0.5,1), xlim= c(0,max(lmachist$counts)),col=rgb(red = 1,0,0,0.3),las=1,xlab="Frequency distribution",main="",xaxt="n", yaxt="n", ylab= "", cex.lab=cexP, cex.axis = cexP)
# 
 rect(0,lmachist$breaks[1:(length(lmachist$breaks) - 1)], lmachist$counts, lmachist$breaks[2:length(lmachist$breaks)], col = rgb(red = 1,0,0,0.3), lty = 1, lwd=0.01, border= rgb(0.1,0.1,0.1,0.3))
 
 lmachist0<-hist(lmBDDMT$DistriMtMax[which(lmBDDMT$Simul=="lmBD0")]- lmBDDMT$DistriNuMtMax[which(lmBDDMT$Simul=="lmBD0")],breaks = 12,plot = F)
 lmachist0$counts<-lmachist0$counts/sum(lmachist0$counts)
 lmachist0$counts<-log(log(1000*lmachist0$counts+1)+1)
# 
 rect(0, lmachist0$breaks[1:(length( lmachist0$breaks) - 1)],  lmachist0$counts,  lmachist0$breaks[2:length( lmachist0$breaks)], col=rgb(red = 0,0,1,0.3), lty= 1, lwd =0.01, border= rgb(0.1,0.1,0.1,0.3) )
     
 county<-c(0,0.01,0.1,0.9)
 axis(side = 1,at = log(log(1000*county+1)+1),labels = county,las=1, cex.axis= cexP)
axis(side = 2,at = seq(-1,1,0.5), labels=FALSE,cex.axis=cexP,las=1,xpd = FALSE)

 abline(h = 0.8,col=gray(level = 0.5),lwd=lwdP,lty=2)
legend(x="bottomright", legend="\\textbf{(B)}", bty = "n", cex = cexP, bg = "white")
 legend(cex = 2, x = "topright",legend = c("Reference","All sex-biases combined"),fill=c(rgb(red = 0,0,1,0.3),rgb(red = 1,0,0,0.3)),bg = "white", border=rgb(0.1,0.1,0.1,0.3), y.intersp=0.9)
 
@

\section{Introg = f(migration)}

<<lmIdisc, dev='tikz', echo=F,out.width='\\textwidth',fig.align='center', fig.height=4,fig.width=6>>=
lmIDMT$DispB<-lmIDMT$Param
lmIDMT <- rbind(lmIDMT, BDdistriMt[BDdistriMt$Param==1,])
lmIDMT$DispB[lmIDMT$DispB==1] <-0.1 
lmIDMT$Param[lmIDMT$Param==1] <-0.1 

lmInofix$DispB <- c(0.001,0.005,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09)
lmInofix <- rbind(lmInofix[,-c(36,37)], BDnofix[BDnofix$DispB==1,])
lmInofix$DispB[lmInofix$DispB==1] <- 0.1

lmIfix$DispB <- c(0.001,0.005,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09)
lmIfix[12,] <- lmInofix[lmInofix$DispB==0.1, c(-34)]
  
lmIfix$DispB[lmIfix$DispB==0.44] <- 0.1

plotDisc(x = lmInofix,y = "DispB",dmt = lmIDMT,xlabb="Migration rate ($m$)",transfo=identity,DrawLegend = T,limX=(c(min(lmIDMT$Param),max(lmIDMT$Param))),main="\\large (C) Mito-nuclear discordance")
@

<<lmIMt, dev='tikz', echo=F,out.width='\\textwidth',fig.align='center', fig.height=4,fig.width=6>>=
plotMt(x=lmIfix,y="DispB",dmt=lmIDMT,xlabb="Migration rate ($m$)",transfo=identity,main="(A) Mitochondrial introgression")
@

<<lmIAutNF, dev='tikz', echo=F,out.width='\\textwidth',fig.align='center', fig.height=4,fig.width=6>>=
plotAut(x=lmInofix,y="DispB",xlabb="Migration rate ($m$)",transfo=identity, main="(B) Autosomal introgression")
@


\section{tables}
<<tableMt, results='asis', echo=FALSE>>=
strCaption <- paste0("")
print(xtable(lmMtTestSelectionShort, digits=3, caption=strCaption, label="Test_table"),
size="footnotesize", #Change size; useful for bigger tables
include.rownames=TRUE, #Don't print rownames
include.colnames=FALSE, #We create them ourselves
caption.placement="top",
hline.after=NULL, #We don't need hline; we use booktabs
add.to.row = list(pos = list(-1,
nrow(lmMtTestSelectionShort)),
command = c(paste("\\toprule \n", " & $\\phi_M$ &$\\MtIttIntrogressions{=1}$ & $\\overline{\\Mitochondria}$  & $\\bar{D}$  & $\\frequency{p_D<0.05}$ & $\\bar{F_s}$ & $\\frequency{p_{F_s}<0.05}$ \\\\\n","\\midrule \n"),"\\bottomrule \n")
)
)
@

\end{document}